load(String.raw`
	(1)(Class)Random(/1)
	(p)
		The Random class provides static functionality for generating psuedo-random numbers.
	(/p)
	(2)Properties(/2)
	(p)
		(prop:seed$Number$)The seed for the white noise random number generator. The same initial seed will lead to the same psuedo-random numbers.(/prop)
		(prop:sampleSeed$Number$)The seed for the interpolated/sampled random number generator (perlin and voronoi).(/prop)
		(prop:distribution$Function$)The distribution with which random numbers are generated. This value can only be *Random.uniform* or *Random.normal*.(/prop)
	(/p)
	(2)Methods(/2)
	(p)
		(method:Random.random@@$Number$)
			Returns a psuedo random number between 0 and 1.
		(/method)
		(method:Random.range@min, max@$Number$)
			Returns a psuedo random number between *min* and *max*.
			(2)Parameters(/2)
			(p2)
				(param:min$Number$)The minimum possible value for the random number.(/param)
				(param:min$Number$)The maximum possible value for the random number.(/param)
			(/p2)
		(/method)
		(method:Random.angle@@$Number$)
			Returns a psuedo random number between 0 and 2 pi.
		(/method)
		(method:Random.bool@[chance]@$Boolean$)
			Returns a psuedo random boolean.
			(2)Parameters(/2)
			(p2)
				(param:chance$Number$)The chance that the boolean will be true. Default is *0.5*.(/param)
			(/p2)
		(/method)
		(method:Random.bool@array@$Boolean$)
			Returns a psuedo random choice from a given array.
			(2)Parameters(/2)
			(p2)
				(param:array$any[]$)The Array that the item should be chosen from.(/param)
			(/p2)
		(/method)
		(method:Random.octave@octaves, algorithm, ...sample, frequency@$Number$)
			Returns normalized layered noise of the specified type with *octaves* layers at a specified location and frequency.
			(2)Parameters(/2)
			(p2)
				(param:octaves$Number$)The amount of layers to the noise.(/param)
				(param:algorithm$Function$)A *Random.* function to sample (Random.perlin2D, Random.voronoi3D, etc...).(/param)
				(param:sample$Number[]$)The coordinates in space from which to sample.(/param)
				(param:frequency$Number$)The frequency of the noise being sampled.(/param)
			(/p2)
		(/method)
		(method:Random.[perlin, voronoi][, 2D, 3D]@x[, y, z][, frequency]@$Number$)
			Returns the specified type noise in the specified amount of dimensions at the specified coordinates with the specified frequency.
			<br>
			Example: *Random.perlin2D(x, y, frequency)* or *Random.voronoi(x)*.
			(2)Parameters(/2)
			(p2)
				(param:x$Number$)The x coordinate in space of the noise to be sampled.(/param)
				(param:y$Number$)The y coordinate in space of the noise to be sampled.(/param)
				(param:z$Number$)The z coordinate in space of the noise to be sampled.(/param)
				(param:frequency$Number$)The frequency of the noise being sampled. Default is *1*.(/param)
			(/p2)
		(/method)
	(/p)
`);