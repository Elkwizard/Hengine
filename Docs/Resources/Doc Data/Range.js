load(String.raw`
	(1)(Class)Range(/1)
	(p)
		A Range is a data structure that stores and processes ranges of numbers.
	(/p)
	(2)Type(/2)
	(p)**
	class Range { ... }
	**(/p)
	(2)Syntax(/2)
	(p)**
	new Range(min, max)
	**(/p)
	(2)Parameters(/2)
	(p)
		(param:min $Number$)The minimum of the range.(/param)
		(param:max $Number$)The maximum of the range.(/param)
	(/p)
	(2)Properties(/2)
	(p)
		(prop:min $Number$)The minimum of the range.(/prop)
		(prop:max $Number$)The maximum of the range.(/prop)
		(prop:length $Number$readonly)The range of the Range.(/prop)
	(/p)
	(2)Methods(/2)
		(p)
		(method:expand@value@$void$) 
			Changes the min and max of the Range to include the given value.
			(2)Parameters(/2)
			(p2)
				(param:value $Number$)The value to expand to.(/param)
			(/p2)
		(/method)
		(method:intersect@range@$Boolean$) 
			Returns whether the Range and the provided other Range intersect.
			(2)Parameters(/2)
			(p2)
				(param:range $Range$)The Range to check intersection with.(/param)
			(/p2)
		(/method)
		(method:getDepth@value@$Number$)
			Returns the signed distance to the closest edge of the Range. (Positive distance is inside the Range).
			(2)Parameters(/2)
			(p2)
				(param:value $Number$)The number to get the depth of.(/param)
			(/p2)
		(/method)
		(method:clip@bound@$Range$)
			Returns a copy of the Range bounded within the provided other Range.
			(2)Parameters(/2)
			(p2)
				(param:bound $Range$)The Range to use for clipping.(/param)
			(/p2)
		(/method)
		(method:includes@value@$Boolean$)
			Returns whether the provided value is between the minimum and maximum of the Range.
			(2)Parameters(/2)
			(p2)
				(param:value $Number$)The number to check.(/param)
			(/p2)
		(/method)
		(method:fromIntervalValue@percent@$Number$)
			Returns the number that is a given percentage of the way from the minimum to the maximum of the Range.
			(2)Parameters(/2)
			(p2)
				(param:percent $Number$)The percentage of the way through the Range.(/param)
			(/p2)
		(/method)
		(method:toIntervalValue@number@$Number$)
			Returns the percentage of the way through the Range from the minimum that a given number is.
			(2)Parameters(/2)
			(p2)
				(param:number $Number$)The number to find the percentage of.(/param)
			(/p2)
		(/method)
	(/p)
`);