load(String.raw`
	(1)(Class)Vector2(/1)
	(p)
		A data structure for storing two dimensional vectors.
	(/p)
	(2)Type(/2)
	(p)**
	class Vector2 extends #Vector# { ... }
	**(/p)
	(2)Syntax(/2)
	(p)**
	new Vector2(x, y)
	**(/p)
	(2)Parameters(/2)
	(p)
		(param:x $Number$)The x component of the Vector2.(/param)
		(param:y $Number$)The y component of the Vector2.(/param)
	(/p)
	(2)Properties(/2)
	(p)
		(prop:x $Number$)The x component of the Vector2.(/prop)
		(prop:y $Number$)The y component of the Vector2.(/prop)
		(prop:angle $Number$)The angle of the Vector2 from the horizontal.(/prop)
		(prop:normal $Vector2$)The left hand normal to the Vector2.(/prop)
		(prop:Vector2.[left, right, up, down]$Vector2$readonly)The unit vectors in the given directions.(/prop)
		(prop:Vector2.origin $Vector2$readonly)The origin vector.(/prop)
	(/p)
	(2)Methods(/2)
	(p)
		(method:rotate@angle@$Vector2$)
			Rotates the caller by the given angle and then returns it.
			(2)Parameters(/2)
			(p2)
				(param:angle $Number$)The angle to rotate by.(/param)
			(/p2)
		(/method)
		(method:rotated@angle@$Vector2$)
			Returns a copy of the caller rotated by the given angle.
			(2)Parameters(/2)
			(p2)
				(param:angle $Number$)The angle to rotate by.(/param)
			(/p2)
		(/method)
		(method:cross@v@$Number$)
			Returns the 2D cross product of the caller and a given vector.
			(2)Parameters(/2)
			(p2)
				(param:v $Vector2$)The second vector in the cross product.(/param)
			(/p2)
		(/method)
		(method:Vector2.fromAngle@angle@$Vector2$)
			Returns a unit vector that is a given angle from the horizontal.
			(2)Parameters(/2)
			(p2)
				(param:angle $Number$)The direction of the new vector.(/param)
			(/p2)
		(/method)
		(method:Vector2.fromPoint@point@$Vector2$)
			Returns a Vector2 with the x and y properties copied from the given object.
			(2)Parameters(/2)
			(p2)
				(param:point $Object$)An object with an x and y property to turn into a Vector2.(/param)
			(/p2)
		(/method)
		(method:Vector2.x@x@$Vector2$)
			Returns a horizontal Vector2 with a given x component.
			(2)Parameters(/2)
			(p2)
				(param:x $Number$)The x component of the Vector2.(/param)
			(/p2)
		(/method)
		(method:Vector2.y@y@$Vector2$)
			Returns a vertical Vector2 with a given y component.
			(2)Parameters(/2)
			(p2)
				(param:y $Number$)The y component of the Vector2.(/param)
			(/p2)
		(/method)
	(/p)
`);